require("dotenv").config();
const puppeteer = require("puppeteer-extra");
const stealthPlugin = require("puppeteer-extra-plugin-stealth");
const express = require("express");
const { chromium } = require("playwright");

puppeteer.use(stealthPlugin()); // Active le mode furtif

const app = express();
const PORT = 3000;

const LBC_URL = "https://www.leboncoin.fr/recherche?category=43&text=manette%20PS5";

let annonces = [];

// üîç Fonction pour r√©cup√©rer les annonces
async function scrapeLeBonCoin() {
    let browser;

    try {
        browser = await puppeteer.launch({
            headless: true,
            args: process.env.PROXY ? [`--proxy-server=${process.env.PROXY}`] : ["--no-sandbox", "--disable-setuid-sandbox"]
        });

        const page = await browser.newPage();
        
        // üîÑ Nettoyage des cookies et Changement d'User-Agent
        await page.deleteCookie(...(await page.cookies()));
        await page.setUserAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.177 Safari/537.36");

        console.log("üîç Scraping des annonces...");
        await page.goto(LBC_URL, { waitUntil: "domcontentloaded" });

        try {
            await page.waitForSelector("a[data-qa-id='aditem_container']", { timeout: 60000 });

            annonces = await page.evaluate(() => {
                return Array.from(document.querySelectorAll("a[data-qa-id='aditem_container']"))
                    .slice(0, 10)
                    .map(ad => ({
                        title: ad.querySelector("p[data-qa-id='aditem_title']").innerText.trim(),
                        link: ad.href
                    }));
            });

            console.log("‚úÖ Annonces r√©cup√©r√©es !");
        } catch (error) {
            console.log("‚ùå Impossible de r√©cup√©rer les annonces, LeBonCoin a peut-√™tre bloqu√© l'acc√®s.");
        }

    } catch (error) {
        console.log("‚ùå Puppeteer a √©t√© bloqu√©. Passage √† Playwright...");
        return await scrapeWithPlaywright();
    } finally {
        if (browser) await browser.close();
    }
}

// üîÑ Alternative Playwright si Puppeteer est bloqu√©
async function scrapeWithPlaywright() {
    let browser;

    try {
        browser = await chromium.launch({ headless: true });

        const page = await browser.newPage();
        await page.goto(LBC_URL, { waitUntil: "domcontentloaded" });

        await page.waitForSelector("a[data-qa-id='aditem_container']", { timeout: 60000 });

        annonces = await page.evaluate(() => {
            return Array.from(document.querySelectorAll("a[data-qa-id='aditem_container']"))
                .slice(0, 10)
                .map(ad => ({
                    title: ad.querySelector("p[data-qa-id='aditem_title']").innerText.trim(),
                    link: ad.href
                }));
        });

        console.log("‚úÖ Annonces r√©cup√©r√©es avec Playwright !");
    } catch (error) {
        console.log("‚ùå Playwright aussi est bloqu√©. V√©rifie ton IP.");
    } finally {
        if (browser) await browser.close();
    }
}

// üì© Fonction pour envoyer un message aux vendeurs
async function sendMessages() {
    if (!process.env.LBC_EMAIL || !process.env.LBC_PASSWORD) {
        console.log("‚ö†Ô∏è Identifiants absents. Envoi de messages d√©sactiv√©.");
        return;
    }

    let browser;

    try {
        browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();

        // üîÑ Nettoyage des cookies et Changement d'User-Agent
        await page.deleteCookie(...(await page.cookies()));
        await page.setUserAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.177 Safari/537.36");

        console.log("üîë Connexion √† LeBonCoin...");
        await page.goto("https://www.leboncoin.fr/account/login", { waitUntil: "networkidle2" });

        await page.type("input[name='st_email']", process.env.LBC_EMAIL);
        await page.type("input[name='st_pass']", process.env.LBC_PASSWORD);
        await page.click("button[type='submit']");
        await page.waitForNavigation({ waitUntil: "networkidle2" });

        console.log("üì® Envoi des messages aux vendeurs...");
        for (const annonce of annonces) {
            console.log(`‚úâÔ∏è Envoi d'un message pour ${annonce.title}`);

            try {
                await page.goto(annonce.link, { waitUntil: "networkidle2" });
                await page.waitForSelector("button[data-qa-id='adview_contact_button']", { timeout: 5000 });
                await page.click("button[data-qa-id='adview_contact_button']");
                await page.waitForSelector("textarea[name='body']");
                await page.type("textarea[name='body']", "Bonjour, votre manette est-elle toujours disponible ?");
                await page.click("button[data-qa-id='send_message_button']");
                console.log("‚úÖ Message envoy√© !");
            } catch (error) {
                console.log("‚ùå Impossible d'envoyer un message pour cette annonce.");
            }
        }
    } catch (error) {
        console.log("‚ùå Puppeteer a √©t√© bloqu√© pendant l'envoi des messages.");
    } finally {
        if (browser) await browser.close();
    }
}

// üåê Route pour afficher les annonces
app.get("/", async (req, res) => {
    if (annonces.length === 0) {
        await scrapeLeBonCoin();
    }

    let html = "<h1>Derni√®res annonces de manettes PS5</h1><ul>";
    annonces.forEach(ad => {
        html += `<li><a href="${ad.link}" target="_blank">${ad.title}</a></li>`;
    });
    html += "</ul>";

    res.send(html);
});

// üöÄ Lancer le serveur
app.listen(PORT, async () => {
    console.log(`üåç Serveur web sur http://localhost:${PORT}`);
    await scrapeLeBonCoin();

    if (process.env.LBC_EMAIL && process.env.LBC_PASSWORD) {
        await sendMessages();
    } else {
        console.log("‚ö†Ô∏è Identifiants absents. Seul le scraping est effectu√©.");
    }
});
